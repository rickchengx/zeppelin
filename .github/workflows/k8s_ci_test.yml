name: k8s_ci_test
on:
  push:
  pull_request:
    branches:
      - master
      - branch-*
    types: [opened, synchronize]

env:
  # Disable keepAlive and pool
  # https://github.com/actions/virtual-environments/issues/1499#issuecomment-689467080
  MAVEN_OPTS: >-
      -Xms1024M -Xmx2048M -XX:MaxMetaspaceSize=1024m -XX:-UseGCOverheadLimit -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn
      -Dhttp.keepAlive=false
      -Dmaven.wagon.http.pool=false
      -Dmaven.wagon.http.retryHandler.count=3
  ZEPPELIN_HELIUM_REGISTRY: helium
  SPARK_PRINT_LAUNCH_COMMAND: "true"
  #SPARK_LOCAL_IP: 127.0.0.1
  #ZEPPELIN_LOCAL_IP: 127.0.0.1

# Use the bash login, because we are using miniconda
defaults:
  run:
    shell: bash -l {0}

jobs:
  test-kubernetes-mode:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Tune Runner VM
        uses: ./.github/actions/tune-runner-vm
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: 8
      - name: Install socat (For Minikube to use port-forwarding)
        run: sudo apt-get -y install socat
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: |
            ~/.m2/repository
            !~/.m2/repository/org/apache/zeppelin/
          key: ${{ runner.os }}-zeppelin-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-zeppelin-
      - name: Setup conda environment with python 3.7 and R
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: python_3_with_R
          environment-file: testing/env_python_3_with_R.yml
          python-version: 3.7
          auto-activate-base: false
          channel-priority: strict
      - name: Make IRkernel available to Jupyter
        run: |
          R -e "IRkernel::installspec()"
          conda list
          conda info
      - name: build the final distribution
        run: |
          mvn install -DskipRat -DskipTests -pl zeppelin-server,zeppelin-web,spark-submit,spark/spark-dependencies,markdown,angular,shell -am -B
          mvn package -DskipRat -DskipTests -pl zeppelin-plugins -amd -B
          mvn package -Pbuild-distr -DskipRat -DskipTests -pl zeppelin-distribution -am -Pbuild-distr
      - name: check the final distribution
        run: ls -l zeppelin-distribution/target
      - name: set up and start minikube cluster
        #uses: medyagh/setup-minikube@master
        uses: manusa/actions-setup-minikube@v2.4.2
        with:
          minikube version: 'v1.16.0'
          kubernetes version: 'v1.19.2'
      - name: verify minikube
        run: |
          env
          # wait for the minikube to start
          sleep 2m
          kubectl get pods -A
          kubectl cluster-info
          kubectl describe nodes
          ls -al /tmp
          cat /tmp/minikube*
      - name: prepare docker images
        run: |
          eval $(minikube -p minikube docker-env)
          docker pull registry.cn-hangzhou.aliyuncs.com/streamcompute/spark:3.1.2
          docker tag registry.cn-hangzhou.aliyuncs.com/streamcompute/spark:3.1.2 local/spark
          mv ./zeppelin-distribution/target/zeppelin-*.tar.gz ./scripts/docker/zeppelin/build-from-distribution/
          docker build --progress=plain -f ./scripts/docker/zeppelin/build-from-distribution/Dockerfile -t local/zeppelin ./scripts/docker/zeppelin/build-from-distribution/
          echo -n "verifying images:"
          docker images
      - name: mvn testing
        run: |
          export SERVICE_DOMAIN=mydomain
          mvn package -DskipRat -pl zeppelin-plugins -amd -Dtest=K8sRemoteInterpreterProcessMinikubeTest -DfailIfNoTests=false -B
      - name: Cat minikube logs
        if: failure()
        run: |
          kubectl get pods -A
          minikube logs
          minikube logs > ~/minikube_logs.log
      - name: Upload minikube logs
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: minikube-logs
          path: ~/minikube_logs.log
          retention-days: 7
